#make graphs
spearmans_graph<-plot_data(spearmans, "Spearman's Rho", "Spearman's Rho", "")
nrmse_graph<-plot_data(nrmse, "NRMSE", "NRMSE", "")
precision_graph<-plot_data(precision,"Precision", "Precision", "")
recall_graph<-plot_data(recall, "Recall", "Recall", "")
F1_graph<-plot_data(F1, "F1", "F1", "")
ggarrange(F1_graph, ggarrange(precision_graph, recall_graph, nrow=2),
nrow = 1,
ncol = 2
)
library(ggplot2)
library(ggpubr)
library(reshape2)
library(hydroGOF)
library(scater)
####################################
# FUNCTIONS
#Function for making graphs of results
plot_data<-function( df, title, ylabel, xlabel) {
df$Var1 <- as.character(df$Var1)
df$Var1 <- factor(df$Var1, levels=unique(df$Var1))
spearmans<-ggplot(data=df, aes(x=Var1, y=value)) + geom_jitter(alpha=0.5, position=position_jitter(width = .2), aes(colour=Var1))  + stat_summary(fun.y=mean, geom="point", shape=95, size = 20, colour="black")
spearmans<- spearmans + scale_x_discrete(labels=c("RSEM", "Salmon Alignment", "Salmon Quasi", "Salmon SMEM", "Sailfish", "eXpress", "Kallisto"))
spearmans<-spearmans + theme(axis.text.x=element_text( angle=30,vjust=.8, hjust=0.8), legend.position = 'none', text = element_text(size=20)) + scale_colour_manual(values=cbbPalette) + ylab(ylabel) + ggtitle(title) + xlab(xlabel)
return(spearmans)
}
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
##############################################
# MAKE FIGURE 2
#Read in performance statistics
ggplot_results<-read.table("../data/Figure2.txt")
#Split ggplot_results by statistic
spearmans<-ggplot_results[ggplot_results$statistic=="spearmans",]
nrmse<-ggplot_results[ggplot_results$statistic=="nrmse",]
precision<-ggplot_results[ggplot_results$statistic=="precision",]
recall<-ggplot_results[ggplot_results$statistic=="recall",]
F1<-ggplot_results[ggplot_results$statistic=="F1",]
#make graphs
spearmans_graph<-plot_data(spearmans, "Spearman's Rho", "Spearman's Rho", "")
nrmse_graph<-plot_data(nrmse, "NRMSE", "NRMSE", "")
precision_graph<-plot_data(precision,"Precision", "Precision", "")
recall_graph<-plot_data(recall, "Recall", "Recall", "")
F1_graph<-plot_data(F1, "F1 Score", "F1 Score", "")
ggarrange(F1_graph, ggarrange(precision_graph, recall_graph, nrow=2),
nrow = 1,
ncol = 2
)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
library(hydroGOF)
library(scater)
####################################
# FUNCTIONS
#Function for making graphs of results
plot_data<-function( df, title, ylabel, xlabel) {
df$Var1 <- as.character(df$Var1)
df$Var1 <- factor(df$Var1, levels=unique(df$Var1))
spearmans<-ggplot(data=df, aes(x=Var1, y=value)) + geom_jitter(alpha=0.5, position=position_jitter(width = .2), aes(colour=Var1))  + stat_summary(fun.y=mean, geom="point", shape=95, size = 20, colour="black")
spearmans<- spearmans + scale_x_discrete(labels=c("RSEM", "Salmon Alignment", "Salmon Quasi", "Salmon SMEM", "Sailfish", "eXpress", "Kallisto"))
spearmans<-spearmans + theme(axis.text.x=element_text( angle=30,vjust=.8, hjust=0.8), legend.position = 'none', text = element_text(size=20)) + scale_colour_manual(values=cbbPalette) + ylab(ylabel) + ggtitle(title) + xlab(xlabel)
return(spearmans)
}
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
##############################################
# MAKE FIGURE 2
#Read in performance statistics
ggplot_results<-read.table("../data/Figure2.txt")
#Split ggplot_results by statistic
spearmans<-ggplot_results[ggplot_results$statistic=="spearmans",]
nrmse<-ggplot_results[ggplot_results$statistic=="nrmse",]
precision<-ggplot_results[ggplot_results$statistic=="precision",]
recall<-ggplot_results[ggplot_results$statistic=="recall",]
F1<-ggplot_results[ggplot_results$statistic=="F1",]
#make graphs
spearmans_graph<-plot_data(spearmans, "Spearman's Rho", "Spearman's Rho", "")
nrmse_graph<-plot_data(nrmse, "NRMSE", "NRMSE", "")
precision_graph<-plot_data(precision,"Precision", "Precision", "")
recall_graph<-plot_data(recall, "Recall", "Recall", "")
F1_graph<-plot_data(F1, "F1 Score", "F1 Score", "")
ggarrange(F1_graph, ggarrange(precision_graph, recall_graph, nrow=2),
nrow = 1,
ncol = 2
)
ggsave("ES_cells_F1_sanger_sc_meeting.pdf", plot = last_plot())
library(ggplot2)
library(ggpubr)
library(reshape2)
library(hydroGOF)
library(scater)
####################################
# FUNCTIONS
#Function for making graphs of results
plot_data<-function( df, title, ylabel, xlabel) {
df$Var1 <- as.character(df$Var1)
df$Var1 <- factor(df$Var1, levels=unique(df$Var1))
spearmans<-ggplot(data=df, aes(x=Var1, y=value)) + geom_jitter(alpha=0.5, position=position_jitter(width = .2), aes(colour=Var1))  + stat_summary(fun.y=mean, geom="point", shape=95, size = 20, colour="black")
spearmans<- spearmans + scale_x_discrete(labels=c("RSEM", "Salmon Alignment", "Salmon Quasi", "Salmon SMEM", "Sailfish", "eXpress", "Kallisto"))
spearmans<-spearmans + theme(axis.text.x=element_text( angle=30,vjust=.8, hjust=0.8), legend.position = 'none', text = element_text(size=20)) + scale_colour_manual(values=cbbPalette) + ylab(ylabel) + ggtitle(title) + xlab(xlabel)
return(spearmans)
}
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
##############################################
# MAKE FIGURE 2
#Read in performance statistics
ggplot_results<-read.table("../data/Figure2.txt")
#Split ggplot_results by statistic
spearmans<-ggplot_results[ggplot_results$statistic=="spearmans",]
nrmse<-ggplot_results[ggplot_results$statistic=="nrmse",]
precision<-ggplot_results[ggplot_results$statistic=="precision",]
recall<-ggplot_results[ggplot_results$statistic=="recall",]
F1<-ggplot_results[ggplot_results$statistic=="F1",]
#make graphs
spearmans_graph<-plot_data(spearmans, "Spearman's Rho", "Spearman's Rho", "")
nrmse_graph<-plot_data(nrmse, "NRMSE", "NRMSE", "")
precision_graph<-plot_data(precision,"Precision", "Precision", "")
recall_graph<-plot_data(recall, "Recall", "Recall", "")
F1_graph<-plot_data(F1, "F1 Score", "F1 Score", "")
ggarrange(F1_graph, ggarrange(precision_graph, recall_graph, nrow=2),
nrow = 1,
ncol = 2
)
ggsave("ES_cells_F1_sanger_sc_meeting.pdf", plot = last_plot(), height = 7)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
library(hydroGOF)
library(scater)
####################################
# FUNCTIONS
#Function for making graphs of results
plot_data<-function( df, title, ylabel, xlabel) {
df$Var1 <- as.character(df$Var1)
df$Var1 <- factor(df$Var1, levels=unique(df$Var1))
spearmans<-ggplot(data=df, aes(x=Var1, y=value)) + geom_jitter(alpha=0.5, position=position_jitter(width = .2), aes(colour=Var1))  + stat_summary(fun.y=mean, geom="point", shape=95, size = 20, colour="black")
spearmans<- spearmans + scale_x_discrete(labels=c("RSEM", "Salmon Alignment", "Salmon Quasi", "Salmon SMEM", "Sailfish", "eXpress", "Kallisto"))
spearmans<-spearmans + theme(axis.text.x=element_text( angle=30,vjust=.8, hjust=0.8), legend.position = 'none', text = element_text(size=20)) + scale_colour_manual(values=cbbPalette) + ylab(ylabel) + ggtitle(title) + xlab(xlabel)
return(spearmans)
}
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
##############################################
# MAKE FIGURE 2
#Read in performance statistics
ggplot_results<-read.table("../data/Figure2.txt")
#Split ggplot_results by statistic
spearmans<-ggplot_results[ggplot_results$statistic=="spearmans",]
nrmse<-ggplot_results[ggplot_results$statistic=="nrmse",]
precision<-ggplot_results[ggplot_results$statistic=="precision",]
recall<-ggplot_results[ggplot_results$statistic=="recall",]
F1<-ggplot_results[ggplot_results$statistic=="F1",]
#make graphs
spearmans_graph<-plot_data(spearmans, "Spearman's Rho", "Spearman's Rho", "")
nrmse_graph<-plot_data(nrmse, "NRMSE", "NRMSE", "")
precision_graph<-plot_data(precision,"Precision", "Precision", "")
recall_graph<-plot_data(recall, "Recall", "Recall", "")
F1_graph<-plot_data(F1, "F1 Score", "F1 Score", "")
ggarrange(F1_graph, ggarrange(precision_graph, recall_graph, nrow=2),
nrow = 1,
ncol = 2
)
ggsave("~/Pictures/ES_cells_F1_sanger_sc_meeting.pdf", plot = last_plot(), height = 7)
ggarrange(spearmans_graph, nrmse_graph,
nrow = 1,
ncol = 2
)
ggsave("~/Pictures/ES_cells_spearmans_sanger_sc_meeting.pdf", plot = last_plot())
ggsave("~/Pictures/ES_cells_spearmans_sanger_sc_meeting.pdf", plot = last_plot(), height=7)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
library(hydroGOF)
library(scater)
####################################
# FUNCTIONS
#Function for making graphs of results
plot_data<-function( df, title, ylabel, xlabel) {
df$Var1 <- as.character(df$Var1)
df$Var1 <- factor(df$Var1, levels=unique(df$Var1))
spearmans<-ggplot(data=df, aes(x=Var1, y=value)) + geom_jitter(alpha=0.5, position=position_jitter(width = .2), aes(colour=Var1))  + stat_summary(fun.y=mean, geom="point", shape=95, size = 20, colour="black")
spearmans<- spearmans + scale_x_discrete(labels=c("RSEM", "Salmon Alignment", "Salmon Quasi", "Salmon SMEM", "Sailfish", "eXpress", "Kallisto"))
spearmans<-spearmans + theme(axis.text.x=element_text( angle=30,vjust=.8, hjust=0.8), legend.position = 'none', text = element_text(size=14)) + scale_colour_manual(values=cbbPalette) + ylab(ylabel) + ggtitle(title) + xlab(xlabel)
return(spearmans)
}
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
##############################################
# MAKE FIGURE 3
#Read in performance statistics
ggplot_results<-read.table("../data/Figure3.txt")
#Split ggplot_results by statistic
spearmans<-ggplot_results[ggplot_results$statistic=="spearmans",]
nrmse<-ggplot_results[ggplot_results$statistic=="nrmse",]
precision<-ggplot_results[ggplot_results$statistic=="precision",]
recall<-ggplot_results[ggplot_results$statistic=="recall",]
F1<-ggplot_results[ggplot_results$statistic=="F1",]
#make graphs
spearmans_graph<-plot_data(spearmans, "Spearman's Rho", "Spearman's Rho", "")
nrmse_graph<-plot_data(nrmse, "NRMSE", "NRMSE", "")
precision_graph<-plot_data(precision,"Precision", "Precision", "")
recall_graph<-plot_data(recall, "Recall", "Recall", "")
F1_graph<-plot_data(F1, "F1", "F1", "")
ggarrange(F1_graph, ggarrange(precision_graph, recall_graph, nrow=2),
nrow = 1,
ncol = 2
)
ggsave("~/Pictures/Dropseq_F1_sanger_sc_meeting.pdf", plot = last_plot(), height = 7)
ggarrange(spearmans_graph, nrmse_graph,
nrow = 1,
ncol = 2
)
ggsave("~/Pictures/Dropseq_spearmans_sanger_sc_meeting.pdf", plot = last_plot(), height=7)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
library(hydroGOF)
library(scater)
####################################
# FUNCTIONS
#Function for making graphs of results
plot_data<-function( df, title, ylabel, xlabel) {
df$Var1 <- as.character(df$Var1)
df$Var1 <- factor(df$Var1, levels=unique(df$Var1))
spearmans<-ggplot(data=df, aes(x=Var1, y=value)) + geom_jitter(alpha=0.5, position=position_jitter(width = .2), aes(colour=Var1))  + stat_summary(fun.y=mean, geom="point", shape=95, size = 20, colour="black")
spearmans<- spearmans + scale_x_discrete(labels=c("RSEM", "Salmon Alignment", "Salmon Quasi", "Salmon SMEM", "Sailfish", "eXpress", "Kallisto"))
spearmans<-spearmans + theme(axis.text.x=element_text( angle=30,vjust=.8, hjust=0.8), legend.position = 'none', text = element_text(size=20)) + scale_colour_manual(values=cbbPalette) + ylab(ylabel) + ggtitle(title) + xlab(xlabel)
return(spearmans)
}
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
##############################################
# MAKE FIGURE 3
#Read in performance statistics
ggplot_results<-read.table("../data/Figure3.txt")
#Split ggplot_results by statistic
spearmans<-ggplot_results[ggplot_results$statistic=="spearmans",]
nrmse<-ggplot_results[ggplot_results$statistic=="nrmse",]
precision<-ggplot_results[ggplot_results$statistic=="precision",]
recall<-ggplot_results[ggplot_results$statistic=="recall",]
F1<-ggplot_results[ggplot_results$statistic=="F1",]
#make graphs
spearmans_graph<-plot_data(spearmans, "Spearman's Rho", "Spearman's Rho", "")
nrmse_graph<-plot_data(nrmse, "NRMSE", "NRMSE", "")
precision_graph<-plot_data(precision,"Precision", "Precision", "")
recall_graph<-plot_data(recall, "Recall", "Recall", "")
F1_graph<-plot_data(F1, "F1", "F1", "")
ggarrange(F1_graph, ggarrange(precision_graph, recall_graph, nrow=2),
nrow = 1,
ncol = 2
)
ggsave("~/Pictures/Dropseq_F1_sanger_sc_meeting.pdf", plot = last_plot(), height = 7)
ggarrange(spearmans_graph, nrmse_graph,
nrow = 1,
ncol = 2
)
ggsave("~/Pictures/Dropseq_spearmans_sanger_sc_meeting.pdf", plot = last_plot(), height=7)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
library(hydroGOF)
library(scater)
####################################
# FUNCTIONS
#Function for making graphs of results
plot_data<-function( df, title, ylabel, xlabel) {
df$Var1 <- as.character(df$Var1)
df$Var1 <- factor(df$Var1, levels=unique(df$Var1))
spearmans<-ggplot(data=df, aes(x=Var1, y=value)) + geom_jitter(alpha=0.5, position=position_jitter(width = .2), aes(colour=Var1))  + stat_summary(fun.y=mean, geom="point", shape=95, size = 20, colour="black")
spearmans<- spearmans + scale_x_discrete(labels=c("RSEM", "Salmon Alignment", "Salmon Quasi", "Salmon SMEM", "Sailfish", "eXpress", "Kallisto"))
spearmans<-spearmans + theme(axis.text.x=element_text( angle=30,vjust=.8, hjust=0.8), legend.position = 'none', text = element_text(size=20)) + scale_colour_manual(values=cbbPalette) + ylab(ylabel) + ggtitle(title) + xlab(xlabel)
return(spearmans)
}
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
##############################################
# MAKE FIGURE 3
#Read in performance statistics
ggplot_results<-read.table("../data/Figure3.txt")
#Split ggplot_results by statistic
spearmans<-ggplot_results[ggplot_results$statistic=="spearmans",]
nrmse<-ggplot_results[ggplot_results$statistic=="nrmse",]
precision<-ggplot_results[ggplot_results$statistic=="precision",]
recall<-ggplot_results[ggplot_results$statistic=="recall",]
F1<-ggplot_results[ggplot_results$statistic=="F1",]
#make graphs
spearmans_graph<-plot_data(spearmans, "Spearman's Rho", "Spearman's Rho", "")
nrmse_graph<-plot_data(nrmse, "NRMSE", "NRMSE", "")
precision_graph<-plot_data(precision,"Precision", "Precision", "")
recall_graph<-plot_data(recall, "Recall", "Recall", "")
F1_graph<-plot_data(F1, "F1 Score", "F1 Score", "")
ggarrange(F1_graph, ggarrange(precision_graph, recall_graph, nrow=2),
nrow = 1,
ncol = 2
)
ggsave("~/Pictures/Dropseq_F1_sanger_sc_meeting.pdf", plot = last_plot(), height = 7)
ggarrange(spearmans_graph, nrmse_graph,
nrow = 1,
ncol = 2
)
ggsave("~/Pictures/Dropseq_spearmans_sanger_sc_meeting.pdf", plot = last_plot(), height=7)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
##############################
# FUNCTIONS
get_percentage_hist<-function(df){
no_zeros<-df#[df$value!=0,]
no_zeros$value<-no_zeros$value==2
two_iso_percentage<-no_zeros %>% group_by(genes) %>% summarise(percentage(value))
ggplot(data = two_iso_percentage, aes(x=`percentage(value)`)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle(" ")
}
#####################################
# MAKE FIGURE 6A
barplot_data<-read.table("../data/Figure6_number_of_isoforms.txt")
B_barplot_data<-barplot_data[barplot_data$ID=="B_1",]
ES_barplot_data<-barplot_data[barplot_data$ID=="ES",]
B_0_1_2_barplot<-ggplot(data=B_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("B lymphocytes")
ES_0_1_2_barplot<-ggplot(data=ES_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("ES cells")
##############################################################
#MAKE FIGURE 6B
exprs_percent_data<-read.table("../data/Figure_6_percent_exprs.txt")
colnames(exprs_percent_data)[2]<-"expression"
colnames(exprs_percent_data)[3]<-"percentage"
B_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="B_1",]
ES_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="ES",]
B_percent_hist<-ggplot(data=B_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle(" ")
ES_percent_hist<-ggplot(data=ES_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle(" ")
#################################################################
#MAKE FIGURE 6C
B_exprs_percent_plot<-ggplot(data =B_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle(" ")
ES_exprs_percent_plot<-ggplot(data = ES_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle(" ")
ggarrange(B_0_1_2_barplot, ES_0_1_2_barplot, B_percent_hist, ES_percent_hist, ncol =2, nrow=2)
ggarrange(B_percent_hist, ES_percent_hist, ncol =2, nrow=1)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
##############################
# FUNCTIONS
get_percentage_hist<-function(df){
no_zeros<-df#[df$value!=0,]
no_zeros$value<-no_zeros$value==2
two_iso_percentage<-no_zeros %>% group_by(genes) %>% summarise(percentage(value))
ggplot(data = two_iso_percentage, aes(x=`percentage(value)`)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle(" ")
}
#####################################
# MAKE FIGURE 6A
barplot_data<-read.table("../data/Figure6_number_of_isoforms.txt")
B_barplot_data<-barplot_data[barplot_data$ID=="B_1",]
ES_barplot_data<-barplot_data[barplot_data$ID=="ES",]
B_0_1_2_barplot<-ggplot(data=B_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("B lymphocytes")
ES_0_1_2_barplot<-ggplot(data=ES_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("ES cells")
##############################################################
#MAKE FIGURE 6B
exprs_percent_data<-read.table("../data/Figure_6_percent_exprs.txt")
colnames(exprs_percent_data)[2]<-"expression"
colnames(exprs_percent_data)[3]<-"percentage"
B_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="B_1",]
ES_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="ES",]
B_percent_hist<-ggplot(data=B_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes")
ES_percent_hist<-ggplot(data=ES_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells")
#################################################################
#MAKE FIGURE 6C
B_exprs_percent_plot<-ggplot(data =B_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes")
ES_exprs_percent_plot<-ggplot(data = ES_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells")
ggarrange(B_percent_hist, ES_percent_hist, ncol =2, nrow=1)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
##############################
# FUNCTIONS
get_percentage_hist<-function(df){
no_zeros<-df#[df$value!=0,]
no_zeros$value<-no_zeros$value==2
two_iso_percentage<-no_zeros %>% group_by(genes) %>% summarise(percentage(value))
ggplot(data = two_iso_percentage, aes(x=`percentage(value)`)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle(" ")
}
#####################################
# MAKE FIGURE 6A
barplot_data<-read.table("../data/Figure6_number_of_isoforms.txt")
B_barplot_data<-barplot_data[barplot_data$ID=="B_1",]
ES_barplot_data<-barplot_data[barplot_data$ID=="ES",]
B_0_1_2_barplot<-ggplot(data=B_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("B lymphocytes")
ES_0_1_2_barplot<-ggplot(data=ES_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("ES cells")
##############################################################
#MAKE FIGURE 6B
exprs_percent_data<-read.table("../data/Figure_6_percent_exprs.txt")
colnames(exprs_percent_data)[2]<-"expression"
colnames(exprs_percent_data)[3]<-"percentage"
B_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="B_1",]
ES_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="ES",]
B_percent_hist<-ggplot(data=B_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(element_text(size = 20))
ES_percent_hist<-ggplot(data=ES_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(element_text(size = 20))
#################################################################
#MAKE FIGURE 6C
B_exprs_percent_plot<-ggplot(data =B_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(element_text(size = 20))
ES_exprs_percent_plot<-ggplot(data = ES_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(element_text(size = 20))
ggarrange(B_percent_hist, ES_percent_hist, ncol =2, nrow=1)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
##############################
# FUNCTIONS
get_percentage_hist<-function(df){
no_zeros<-df#[df$value!=0,]
no_zeros$value<-no_zeros$value==2
two_iso_percentage<-no_zeros %>% group_by(genes) %>% summarise(percentage(value))
ggplot(data = two_iso_percentage, aes(x=`percentage(value)`)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle(" ")
}
#####################################
# MAKE FIGURE 6A
barplot_data<-read.table("../data/Figure6_number_of_isoforms.txt")
B_barplot_data<-barplot_data[barplot_data$ID=="B_1",]
ES_barplot_data<-barplot_data[barplot_data$ID=="ES",]
B_0_1_2_barplot<-ggplot(data=B_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("B lymphocytes")
ES_0_1_2_barplot<-ggplot(data=ES_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("ES cells")
##############################################################
#MAKE FIGURE 6B
exprs_percent_data<-read.table("../data/Figure_6_percent_exprs.txt")
colnames(exprs_percent_data)[2]<-"expression"
colnames(exprs_percent_data)[3]<-"percentage"
B_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="B_1",]
ES_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="ES",]
B_percent_hist<-ggplot(data=B_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(text = element_text(size = 20))
ES_percent_hist<-ggplot(data=ES_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(text = element_text(size = 20))
#################################################################
#MAKE FIGURE 6C
B_exprs_percent_plot<-ggplot(data =B_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(text = element_text(size = 20))
ES_exprs_percent_plot<-ggplot(data = ES_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(text= element_text(size = 20))
ggarrange(B_percent_hist, ES_percent_hist, ncol =2, nrow=1)
B_percent_hist<-ggplot(data=B_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(text = element_text(size = 18))
ES_percent_hist<-ggplot(data=ES_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(text = element_text(size = 18))
ggarrange(B_percent_hist, ES_percent_hist, ncol =2, nrow=1)
B_percent_hist<-ggplot(data=B_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(text = element_text(size = 16))
ES_percent_hist<-ggplot(data=ES_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(text = element_text(size = 16))
ggarrange(B_percent_hist, ES_percent_hist, ncol =2, nrow=1)
B_percent_hist<-ggplot(data=B_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(text = element_text(size = 15))
ES_percent_hist<-ggplot(data=ES_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(text = element_text(size = 15))
ggarrange(B_percent_hist, ES_percent_hist, ncol =2, nrow=1)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
##############################
# FUNCTIONS
get_percentage_hist<-function(df){
no_zeros<-df#[df$value!=0,]
no_zeros$value<-no_zeros$value==2
two_iso_percentage<-no_zeros %>% group_by(genes) %>% summarise(percentage(value))
ggplot(data = two_iso_percentage, aes(x=`percentage(value)`)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle(" ")
}
#####################################
# MAKE FIGURE 6A
barplot_data<-read.table("../data/Figure6_number_of_isoforms.txt")
B_barplot_data<-barplot_data[barplot_data$ID=="B_1",]
ES_barplot_data<-barplot_data[barplot_data$ID=="ES",]
B_0_1_2_barplot<-ggplot(data=B_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("B lymphocytes")
ES_0_1_2_barplot<-ggplot(data=ES_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("ES cells")
##############################################################
#MAKE FIGURE 6B
exprs_percent_data<-read.table("../data/Figure_6_percent_exprs.txt")
colnames(exprs_percent_data)[2]<-"expression"
colnames(exprs_percent_data)[3]<-"percentage"
B_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="B_1",]
ES_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="ES",]
B_percent_hist<-ggplot(data=B_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(text = element_text(size = 15))
ES_percent_hist<-ggplot(data=ES_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(text = element_text(size = 15))
#################################################################
#MAKE FIGURE 6C
B_exprs_percent_plot<-ggplot(data =B_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(text = element_text(size = 15))
ES_exprs_percent_plot<-ggplot(data = ES_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(text= element_text(size = 15))
ggarrange(B_percent_hist, ES_percent_hist, ncol =2, nrow=1)
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(reshape2)
##############################
# FUNCTIONS
get_percentage_hist<-function(df){
no_zeros<-df#[df$value!=0,]
no_zeros$value<-no_zeros$value==2
two_iso_percentage<-no_zeros %>% group_by(genes) %>% summarise(percentage(value))
ggplot(data = two_iso_percentage, aes(x=`percentage(value)`)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle(" ")
}
#####################################
# MAKE FIGURE 6A
barplot_data<-read.table("../data/Figure6_number_of_isoforms.txt")
B_barplot_data<-barplot_data[barplot_data$ID=="B_1",]
ES_barplot_data<-barplot_data[barplot_data$ID=="ES",]
B_0_1_2_barplot<-ggplot(data=B_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("B lymphocytes")
ES_0_1_2_barplot<-ggplot(data=ES_barplot_data, aes(x=value)) + geom_bar() + xlab("Number of Isoforms Expressed") + ggtitle("ES cells")
##############################################################
#MAKE FIGURE 6B
exprs_percent_data<-read.table("../data/Figure_6_percent_exprs.txt")
colnames(exprs_percent_data)[2]<-"expression"
colnames(exprs_percent_data)[3]<-"percentage"
B_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="B_1",]
ES_exprs_percent_data<-exprs_percent_data[exprs_percent_data$ID=="ES",]
B_percent_hist<-ggplot(data=B_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(text = element_text(size = 15))
ES_percent_hist<-ggplot(data=ES_exprs_percent_data, aes(x=percentage)) + geom_histogram() + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(text = element_text(size = 15))
#################################################################
#MAKE FIGURE 6C
B_exprs_percent_plot<-ggplot(data =B_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle("B lymphocytes") + theme(text = element_text(size = 15))
ES_exprs_percent_plot<-ggplot(data = ES_exprs_percent_data, aes(y=expression,x=percentage)) + geom_point() + ylab("log2(Counts + 1)") + xlab("% Cells Which Express Both Isoforms") + ggtitle("ES cells") + theme(text= element_text(size = 15))
ggarrange(B_percent_hist, ES_percent_hist, ncol =2, nrow=1)
ggsave("~/Pictures/figure_6_percentage_hist_powerpoint.pdf")
ggarrange(B_exprs_percent_plot, ES_exprs_percent_plot, ncol=2, nrow=1)
ggsave("~/Pictures/figure_6_correlation.pdf")
